@using KnowledgeMining.Blazor.Models

@foreach (var facet in Facets)
{
    <MudExpansionPanels Class="mt-6">
        <MudExpansionPanel Text="@facet.Name">
            @foreach (var selectableFacet in _selectedFacets.Where(f => f.Facet.Name == facet.Name).Take(10))
            {
                <MudCheckBox @bind-Checked="selectableFacet.IsSelected" Label="@($"{selectableFacet.Facet.Value} ({selectableFacet.Facet.Count})")"></MudCheckBox>
            }
        </MudExpansionPanel>
    </MudExpansionPanels>
}

@code {
    [Parameter]
    public IEnumerable<AggregateFacet> Facets { get; set; }

    private List<SelectableFacet> _selectedFacets = new();

    protected override void OnParametersSet()
    {
        _selectedFacets.AddRange(Facets.SelectMany(f => f.Values.Select(v => new SelectableFacet()
            {
                Facet = v,
                IsSelected = false
            })));
    }

    private class SelectableFacet
    {
        public Facet Facet { get; set; }
        public bool IsSelected { get; set; }
    }
}