@using KnowledgeMining.Application.Documents.Queries.SearchDocuments
@foreach (var aggregateFacet in Facets)
{
    <MudExpansionPanels Class="mt-6">
        <MudExpansionPanel Text="@($"{aggregateFacet.Name.SplitCamelCase().ToTitleCase()} ({aggregateFacet.Values.Count()})")" Disabled="@(aggregateFacet.Values.Any() is false)">
            @foreach (var facet in aggregateFacet.Values)
            {
                <MudCheckBox T="bool" Label="@($"{facet.Value} ({facet.Count})")" CheckedChanged="@(() => HandleCheckedChanged(facet))"></MudCheckBox>
            }
        </MudExpansionPanel>
    </MudExpansionPanels>
}

@code {
    [Parameter]
    public IEnumerable<SummarizedFacet>? Facets { get; set; }

    [Parameter]
    public EventCallback<Facet> OnFacetSelectedChanged { get; set; }

    private Task HandleCheckedChanged(Facet facet)
    {
        return OnFacetSelectedChanged.InvokeAsync(facet);
    }
}